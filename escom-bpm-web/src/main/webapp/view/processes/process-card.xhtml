<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                template="/view/templ/templ-card.xhtml">

    <ui:param name="_bean" value="#{processCardBean}"/>

    <ui:define name="customJavaScript">
         <h:outputScript library="contextMenu" name="contextMenu.js" />
         <h:outputStylesheet library="contextMenu" name="contextMenu.css"/> 
    </ui:define>
        
    <ui:define name="specActionMenu">
        <p:menuitem icon="ui-icon-play" value="#{bundle.Run}"
                    disabled="#{processCardBean.isReadOnly()}"
                    onclick="document.getElementById('#{_frm}:btnRun').click();"/>
        <p:menuitem icon="ui-icon-stop" value="#{bundle.Stop}"
                    disabled="#{processCardBean.isDisableBtnStop()}"
                    onclick="document.getElementById('#{_frm}:btnStop').click();"/>
    </ui:define>
    
    <ui:define name="specSubMenu" >
    </ui:define>
    
    <ui:define name="specToolButtons">
        <h:outputLabel value="#{bundle.State}: "/>
        <p:outputLabel value="#{processCardBean.getLabelFromBundle(_bean.editedItem.state.currentState.name)}"/>
        <p:spacer width="15"/>
        <p:commandButton id="btnRun" value="#{bundle.Run}" title="#{bundle.StartProcess}" icon="ui-icon-play"
                        disabled="#{processCardBean.isReadOnly()}"
                        update="#{_frm}"
                        actionListener="#{processCardBean.onRun()}"
                        oncomplete="return itemChange = 0;">
            <f:param name="isRequired" value="true"/>
        </p:commandButton>
        <p:spacer width="2"/>
        <p:commandButton id="btnStop" value="#{bundle.Stop}" title="#{bundle.InterruptionProcess}" icon="ui-icon-stop"
                        disabled="#{processCardBean.isDisableBtnStop()}"
                        update="#{_frm}" 
                        actionListener="#{processCardBean.onStop()}"
                        oncomplete="return itemChange = 0;">
            <p:confirm header="#{bundle.InterruptionProcess}" message="#{msg.ConfirmInterruptionProcess}" icon="ui-icon-alert" />
        </p:commandButton>
        <p:spacer width="10"/>
    </ui:define>
    
    <ui:define name="page_body">
        <p:tab title="#{bundle.Process}">
            <p:panelGrid columns="1" columnClasses="ui-grid-col-12" styleClass="ui-grid-col-12 without-spaces" >
                
                <p:outputLabel value="#{bundle.ProcessCaption}:" indicateRequired="true" />
                <p:inputText id="nameItem" value="#{processCardBean.editedItem.name}"
                         styleClass="ui-grid-col-12" 
                         onkeypress="checkEsc(#{_bean.cancelBtnName});"
                         onchange="return itemChange = 1;"
                         disabled="#{processCardBean.isReadOnly()}"
                         required="#{param['isRequired'] == 'true'}"
                         requiredMessage="#{bundle.Field} [#{bundle.Name}] #{bundle.MustBeFilled}"/>                
                
                <p:outputLabel value="#{bundle.TermApproval}:" indicateRequired="true"/> 
                <p:calendar id="dtPlanExecDate" value="#{processCardBean.editedItem.planExecDate}"  
                            styleClass="without-spaces" pages="2"
                            timeZone="#{TimeZone.getDefault()}" disabledWeekends="true"
                            showHour="true" showMinute="true" pattern="dd.MM.yyyy HH:mm"
                            disabled="#{processCardBean.isReadOnly()}"
                            locale="#{sessionBean.locale}"
                            required="#{param['isRequired'] == 'true'}"
                            navigator="true" yearRange="c-10:c+20"
                            requiredMessage="#{bundle.Field} [#{bundle.TermApproval}] #{bundle.MustBeFilled}">                    
                    <p:ajax event="dateSelect" onstart="itemChange = 1;" />                    
                </p:calendar>
                
                <p:outputLabel value="#{bundle.Documents}" />
                 <ui:include src="/view/docs/doc-list.xhtml" >
                     <ui:param name="_docs" value="#{processCardBean.editedItem.docs}" />
                </ui:include>
                                
                <p:outputLabel value="#{bundle.ApprovalSheet}" />                
                <p:dataTable id="concorderList" value="#{processCardBean.getTasksFromModel()}" var="task" emptyMessage="#{bundle.EmptyTable}"
                             rowKey="#{task.tempId}" selectionMode="single" 
                             paginator="true" paginatorPosition="bottom" 
                             paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"                                                                                  
                             rowsPerPageTemplate="5, 10, 20, 35" 
                             currentPageReportTemplate="#{bundle.CountRecords}: {totalRecords}, #{bundle.Showing} {startRecord}-{endRecord} "
                             tableStyle="table-layout: auto;" styleClass="ui-grid-col-12 without-spaces">                
                    
                    <p:column width="16" sortBy="#{task.state.currentState.name}">
                        <h:graphicImage id="iconDone" value="#{task.state.currentState.icon}" title="#{stateBean.getBundleName(task.state.currentState)}"/>
                    </p:column>
                    
                    <p:column headerText="#{bundle.Concorder}" sortBy="#{task.planExecDate}">                        
                        <p:commandLink value="#{task.owner.nameEndElipse}" title="#{bundle.Open}"
                                       actionListener="#{processCardBean.setCurrentTask(task)}"
                                       oncomplete="document.getElementById('#{_frm}:btnOpenTask').click();"/>                        
                    </p:column>
                    
                    <p:column headerText="#{bundle.Term}" width="90" sortBy="#{task.planExecDate}">
                        <h:outputLabel value="#{task.planExecDate}">
                            <f:convertDateTime type="both" dateStyle="short" timeStyle="short" locale="#{sessionBean.locale}" timeZone="#{TimeZone.getDefault()}"/>
                        </h:outputLabel>
                    </p:column>
                    
                    <p:column headerText="#{bundle.Status}" >
                        <h:outputLabel value="#{sessionBean.getItemStatus(task)}"/>
                    </p:column>
                    
                    <p:column width="16" sortBy="#{task.iconName}" >
                        <p:graphicImage value="/resources/icon/#{task.iconName}.png" /> 
                    </p:column>
                    
                    <p:column headerText="#{bundle.Result}" >
                        <h:outputLabel value="#{processCardBean.getLabelFromBundle(task.result)}"/>
                    </p:column>
                    
                </p:dataTable>
            </p:panelGrid>
        </p:tab>
        
        <p:tab title="#{bundle.Scheme}" >            
            <p:panelGrid columns="1" columnClasses="ui-grid-col-12" styleClass="ui-panelgrid-blank ui-grid-col-12 without-spaces" >
                <p:toolbar styleClass="ui-grid-col-12" >
                    <f:facet name="left">
                        <p:commandButton value="Tasks" title="#{bundle.AddTasks}"
                                        disabled="#{processCardBean.isReadOnly()}"
                                        onstart="PF('statusDialog').show()"
                                        oncomplete="PF('statusDialog').hide();"
                                        actionListener="#{staffBean.onManySelectItem()}" >
                           <p:ajax event="dialogReturn" listener="#{processCardBean.onStaffsSelected}" />
                        </p:commandButton>
                        <p:commandButton  value="And" title="#{bundle.AddLogicElement}"
                                          disabled="#{processCardBean.isReadOnly()}"
                                          actionListener="#{processCardBean.onAddLogicElement('And')}" >
                        </p:commandButton>
                        <p:commandButton  value="Or" title="#{bundle.AddLogicElement}"
                                          disabled="#{processCardBean.isReadOnly()}"
                                          actionListener="#{processCardBean.onAddLogicElement('Or')}" >
                        </p:commandButton>
                        <p:commandButton  value="If" title="#{bundle.AddCondition}"
                                          disabled="#{processCardBean.isReadOnly()}"
                                          actionListener="#{processCardBean.onAddConditionElement()}" >
                            <p:ajax event="dialogReturn" listener="#{processCardBean.onElementClose}" />
                        </p:commandButton>
                        
                        <p:commandButton  value="State" title="#{bundle.AddState}"
                                          disabled="#{processCardBean.isReadOnly()}"
                                          actionListener="#{processCardBean.onAddStateElement('success')}" >
                            <p:ajax event="dialogReturn" listener="#{processCardBean.onElementClose}" />
                        </p:commandButton>
                        
                        <p:commandButton value="Start" title="#{bundle.AddStart}"
                                         disabled="#{processCardBean.isReadOnly()}"
                                         actionListener="#{processCardBean.onAddStartElement()}" >
                            <p:ajax event="dialogReturn" listener="#{processCardBean.onElementClose}" />
                        </p:commandButton>
                        <p:commandButton value="Enter" title="#{bundle.AddEnter}"
                                         disabled="#{processCardBean.isReadOnly()}"
                                         actionListener="#{processCardBean.onAddEnterElement()}" >
                            <p:ajax event="dialogReturn" listener="#{processCardBean.onElementClose}" />
                        </p:commandButton>
                        <p:commandButton value="Exit" title="#{bundle.AddExit}"
                                        disabled="#{processCardBean.isReadOnly()}"
                                        actionListener="#{processCardBean.onAddExitElement()}" >
                                <p:ajax event="dialogReturn" listener="#{processCardBean.onElementClose}" />
                        </p:commandButton>
                        

                        <span class="ui-separator">
                            <span class="ui-icon ui-icon-grip-dotted-vertical" />
                        </span>

                        <p:commandButton title="#{bundle.LoadFromTemlate}" icon="ui-icon-folder-open"
                                         disabled="#{processCardBean.isReadOnly() or processCardBean.editedItem.owner == null}"                                         
                                         onclick="PF('LoadFromTemplDLG').show();"
                                         update="LoadFromTemplFRM">                           
                        </p:commandButton>
                        <p:commandButton title="#{bundle.SaveAsTemlate}" icon="ui-icon-disk"
                                         disabled="#{processCardBean.isReadOnly() or processCardBean.editedItem.owner == null}"
                                         update="SaveAsTemplFRM"
                                         onclick="PF('SaveAsTemplDLG').show();">
                        </p:commandButton>
                        
                        <p:commandButton title="Clear" icon="ui-icon-closethick"
                                         disabled="#{processCardBean.isReadOnly()}"
                                         actionListener="#{processCardBean.onClearModel()}"
                                         update="diagramm">
                            <p:confirm header="#{msg.ProcessDiagramWillBeCleared}" message="#{bundle.AreYouSure}" icon="ui-icon-alert"/>
                        </p:commandButton>
                        <span class="ui-separator">
                            <span class="ui-icon ui-icon-grip-dotted-vertical" />
                        </span>                          
                        <p:commandButton type="button" title="Print" icon="ui-icon-print"/>
                    </f:facet>

                    <f:facet name="right">
                        
                    </f:facet>
                </p:toolbar>  
            
                <p:diagram id="diagramm" value="#{processCardBean.model}" style="height:1600px" styleClass="ui-widget-content ui-grid-col-12" var="el" >
                    <f:facet name="element" >
                        <h:outputLabel value="#{processCardBean.getElementCaption(el)}" style="display:block;margin:1em;word-wrap:break-word;"/>
                    </f:facet>
                    <p:ajax event="connect" disabled="#{processCardBean.isReadOnly()}" listener="#{processCardBean.onConnect}" />
                    <p:ajax event="disconnect" disabled="#{processCardBean.isReadOnly()}" listener="#{processCardBean.onDisconnect}" />
                    <p:ajax event="connectionChange" disabled="#{processCardBean.isReadOnly()}" listener="#{processCardBean.onConnectionChange}" />
                </p:diagram>
            </p:panelGrid>
        </p:tab>
        
        <p:tab title="#{bundle.ReportsExe}">
            <p:panelGrid columns="1" columnClasses="ui-grid-col-12" styleClass="ui-grid-col-12 without-spaces">
                <ui:include src="/view/tasks/reports.xhtml"/>
            </p:panelGrid>
        </p:tab>
    </ui:define>
   
    <ui:define name="customStyleCSS">
        <style type="text/css">
            .ui-diagram-task {
                background-color: #9ed4ef;
                width: 14em;
                min-height: 4em;                
            }
            
            .noExecutor {
                border: 0.1em solid #C33730 !important;              
            }
            .draft {
            }
            .running {
                border:0.1em solid #020202 !important;
            }            
            .finished {
                border:0.1em solid #020202 !important;                
            }
            .cancelled{
                border:0.1em dotted #020202 !important;                
            }
            
            .ui-diagram-element:hover {
                background-color: #C7C6C4;
            }

            .ui-diagram-element {                 
                text-align: center;
                color: #ffffff;
                border-radius: 4px;
                border:0.1em dotted #E5E4E2;
                box-shadow: 0 5px 10px rgba(0, 0, 0, 0.8);
            }

            .ui-diagram-logic {
                width:4em;
                height:4em;
                border-radius: 4em;
                background-color: #099b05;
                word-wrap: normal !important;
            }

            .ui-diagram-start {
                width:3em;
                height:3em;
                background-color: #edef04;
            }

            .ui-diagram-enter {
                width:3em;
                height:3em;
                border-radius: 3em;
                background-color: blue;
            }
            
            .ui-diagram-exit {
                width:3em;
                height:3em;
                border-radius: 3em;
                background-color: #000000;
            }

            .ui-diagram-finish {
                width:3em;
                height:3em;
                border-radius: 0em;
                background-color: #000000;
            }
            
            .ui-diagram-success-state {
                width:10em;
                height:5em;
                background-color: #02b044;
            }

            .ui-diagram-fail-state {
                width:10em;
                height:5em;
                background-color: #C33730;
            }

            .ui-diagram-completed-state {
                width:10em;
                height:5em;
                background-color: darkgray;
            }
            
            .ui-diagram-condition {
                width:8em;
                height:6em;
                background-color: #c306ab;
            }

            .iw-contextMenu {
                font-family: Verdana, Helvetica, Arial, sans-serif;
            }
            
        </style>
    </ui:define>
    
    <ui:define name="card_scripts">
        <script type="text/javascript">        
            function addContextMenu(componentId){    
                var menu = [{
                        name: '#{bundle.Paste}',
                        img: '/escom-bpm-web/resources/icon/paste.png',
                        disable: true,
                        fun: function () {
                            elementPaste();
                        }
                    },{
                        name: '#{bundle.Close}',
                        img: '/escom-bpm-web/resources/icon/cancel.png'                        
                    }];
                
                var component = $(document.getElementById(componentId)); 
                component.contextMenu('menu', menu, {});                
            }
            
            function addElementMenu(elementIds){    
                var menu = [{
                        name: '#{bundle.Properties}',
                        img: '/escom-bpm-web/resources/images/settings.png',
                        fun: function () {
                            elementOpen();
                        }
                    },{
                        name: '#{bundle.Copy}',
                        img: '/escom-bpm-web/resources/icon/copy.png',
                        fun: function () {
                            elementCopy();
                        }
                    },{
                        name: '#{bundle.Delete}',
                        img: '/escom-bpm-web/resources/images/delete.png',
                        fun: function () {
                            elementDelete();
                        }
                    }];

                elementIds.forEach(function(elementId){                  
                    var component = $(document.getElementById(elementId)); 
                    component.contextMenu('menu', menu, {triggerOn:'contextmenu', displayAround:'trigger', horAdjust:-component.width()+20, verAdjust: +20});
                });
            }

            function sendElementClick(info){
                    console.log("elementId="+info.target.id);                    
                    var xPos = Math.round(info.target.offsetLeft / parseFloat($("body").css("font-size")));
                    var yPos = Math.round(info.target.offsetTop / parseFloat($("body").css("font-size")));
                    var elementId = info.target.id;
                    if (elementId == ""){
                        var parentElement = info.target.parentElement;                              
                        elementId = $(parentElement).attr('id');
                        xPos = Math.round(parentElement.offsetLeft / parseFloat($("body").css("font-size")));
                        yPos = Math.round(parentElement.offsetTop / parseFloat($("body").css("font-size")));
                    }
                    elementClicked([
                        {name : 'elementId',value : elementId},
                        {name : 'posX',     value : xPos},
                        {name : 'posY',     value : yPos}
                    ]);
            }
                                        
            $(document).on('click', '.ui-diagram > .ui-diagram-element', 
                function(info) {
                    sendElementClick(info);
                });
                                
            $(document).on('contextmenu', '.ui-diagram > .ui-diagram-element',
                function(info) {
                    sendElementClick(info);                    
            });
            $(document).on('dblclick', '.ui-diagram > .ui-diagram-element',
                function(info) {
                    var xPos = Math.round(info.target.offsetLeft / parseFloat($("body").css("font-size")));
                    var yPos = Math.round(info.target.offsetTop / parseFloat($("body").css("font-size")));
                    var elementId = info.target.id;
                    if (elementId == ""){
                        var parentElement = info.target.parentElement;                              
                        elementId = $(parentElement).attr('id');
                        xPos = Math.round(parentElement.offsetLeft / parseFloat($("body").css("font-size")));
                        yPos = Math.round(parentElement.offsetTop / parseFloat($("body").css("font-size")));
                    }
                    elementOpen([
                        {name : 'elementId',value : elementId},
                        {name : 'posX',     value : xPos},
                        {name : 'posY',     value : yPos}
                    ]);
                });
 
             function refreshContextMenu(componentId){
                console.log("refresh componentId="+componentId);
                 var menu = [{
                        name: '#{bundle.Paste}',
                        img: '/escom-bpm-web/resources/images/paste.png',
                        disable: false,
                        fun: function () {
                            elementPaste();
                        }
                    },{
                        name: '#{bundle.Close}',
                        img: '/escom-bpm-web/resources/icon/cancel.png',                        
                    }];
                
                var component = $(document.getElementById(componentId)); 
                component.contextMenu('update', menu, {});  
            }
        </script>
        
        <p:remoteCommand name="elementClicked" actionListener="#{processCardBean.onElementClicked}"/>
        <p:remoteCommand name="elementOpen" actionListener="#{processCardBean.onElementOpenClick()}"/>
        <p:remoteCommand name="elementCopy" actionListener="#{processCardBean.onElementCopy()}"/>
        <p:remoteCommand name="elementPaste" actionListener="#{processCardBean.onElementPaste()}"/>
        <p:remoteCommand name="elementDelete" actionListener="#{processCardBean.onElementDelete}"/>
        
        <p:commandButton style="display: none;" id="btnOpenElement" actionListener="#{processCardBean.onElementOpen()}">
            <p:ajax event="dialogReturn" listener="#{processCardBean.onElementClose}"/>
        </p:commandButton>
        <p:commandButton style="display: none;" id="btnOpenTask" actionListener="#{processCardBean.onOpenTask()}">
            <p:ajax event="dialogReturn" listener="#{processCardBean.onAfterTaskClose}"/>
        </p:commandButton>
    </ui:define>
    
    <ui:define name="dialogs">
        <ui:include src="/view/tasks/report.xhtml"/>
        <ui:include src="/view/processes/templ/save-as-dlg.xhtml"/>
        <ui:include src="/view/processes/templ/load-from-templ-dlg.xhtml"/>
    </ui:define>
</ui:composition>