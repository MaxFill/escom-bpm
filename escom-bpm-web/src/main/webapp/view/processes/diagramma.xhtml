<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                template="/view/templ/templ-dlg.xhtml"
                xmlns:f="http://xmlns.jcp.org/jsf/core">

    <ui:param name="_bean" value="#{diagramBean}"/>

    <ui:define name="customStyleCSS">      
        <h:outputStylesheet library="css" name="processes.css"/>
        <h:outputStylesheet library="contextMenu" name="contextMenu.css"/> 
    </ui:define>

    <ui:define name="customJavaScript">      
        <h:outputScript library="contextMenu" name="contextMenu.js" />        
        <script type="text/javascript">
            function addContextMenu(componentId) {
                var menu = [{
                        name: '#{bundle.Paste}',
                        img: '/escom-bpm-web/resources/icon/paste.png',
                        disable: true,
                        fun: function () {
                            elementPaste();
                        }
                    }, {
                        name: '#{bundle.Close}',
                        img: '/escom-bpm-web/resources/icon/cancel.png'
                    }];

                var component = $(document.getElementById(componentId));
                component.contextMenu('menu', menu, {});
            }

            function addElementMenu(elementIds) {
                var menu = [{
                        name: '#{bundle.Properties}',
                        img: '/escom-bpm-web/resources/images/settings.png',
                        fun: function () {
                            elementOpen();
                        }
                    }, {
                        name: '#{bundle.Copy}',
                        img: '/escom-bpm-web/resources/icon/copy.png',
                        fun: function () {
                            elementCopy();
                        }
                    }, {
                        name: '#{bundle.Delete}',
                        img: '/escom-bpm-web/resources/images/delete.png',
                        fun: function () {
                            elementDelete();
                        }
                    }];

                elementIds.forEach(function (elementId) {
                    var component = $(document.getElementById(elementId));
                    component.contextMenu('menu', menu, {triggerOn: 'contextmenu', displayAround: 'trigger', horAdjust: -component.width() + 20, verAdjust: +20});
                });
            }

            function sendElementClick(info) {
                //console.log("elementId="+info.target.id);                    
                var xPos = Math.round(info.target.offsetLeft / parseFloat($("body").css("font-size")));
                var yPos = Math.round(info.target.offsetTop / parseFloat($("body").css("font-size")));
                var elementId = info.target.id;
                if (elementId.indexOf('diagramm') == -1) {
                    var parentElement = info.target.parentElement;
                    elementId = $(parentElement).attr('id');
                    //console.log("parent elementId="+ elementId);
                    xPos = Math.round(parentElement.offsetLeft / parseFloat($("body").css("font-size")));
                    yPos = Math.round(parentElement.offsetTop / parseFloat($("body").css("font-size")));
                }
                elementClicked([
                    {name: 'elementId', value: elementId},
                    {name: 'posX', value: xPos},
                    {name: 'posY', value: yPos}
                ]);
            }

            $(document).on('click', '.ui-diagram > .ui-diagram-element',
                    function (info) {
                        sendElementClick(info);
                    });

            $(document).on('contextmenu', '.ui-diagram > .ui-diagram-element',
                    function (info) {
                        sendElementClick(info);
                    });
            $(document).on('dblclick', '.ui-diagram > .ui-diagram-element',
                    function (info) {
                        var xPos = Math.round(info.target.offsetLeft / parseFloat($("body").css("font-size")));
                        var yPos = Math.round(info.target.offsetTop / parseFloat($("body").css("font-size")));
                        var elementId = info.target.id;
                        if (elementId == "") {
                            var parentElement = info.target.parentElement;
                            elementId = $(parentElement).attr('id');
                            xPos = Math.round(parentElement.offsetLeft / parseFloat($("body").css("font-size")));
                            yPos = Math.round(parentElement.offsetTop / parseFloat($("body").css("font-size")));
                        }
                        elementOpen([
                            {name: 'elementId', value: elementId},
                            {name: 'posX', value: xPos},
                            {name: 'posY', value: yPos}
                        ]);
                    });

            function refreshContextMenu(componentId) {
                //console.log("refresh componentId="+componentId);
                var menu = [{
                        name: '#{bundle.Paste}',
                        img: '/escom-bpm-web/resources/images/paste.png',
                        disable: false,
                        fun: function () {
                            elementPaste();
                        }
                    }, {
                        name: '#{bundle.Close}',
                        img: '/escom-bpm-web/resources/icon/cancel.png',
                    }];

                var component = $(document.getElementById(componentId));
                component.contextMenu('update', menu, {});
            }
        </script>
    </ui:define>

    <ui:define name="toolbarComponents" > 
        <p:commandButton value="Tasks" title="#{bundle.AddTasks}"
                         disabled="#{diagramBean.isReadOnly()}"
                         onstart="PF('statusDialog').show()"
                         oncomplete="PF('statusDialog').hide();"
                         actionListener="#{staffBean.onManySelectItem()}" >
            <p:ajax event="dialogReturn" listener="#{diagramBean.onStaffsSelected}" />
        </p:commandButton>
        <p:commandButton  value="And" title="#{bundle.AddLogicElement}"
                          disabled="#{diagramBean.isReadOnly()}"
                          actionListener="#{diagramBean.onAddLogicElement('And')}" >
        </p:commandButton>
        <p:commandButton  value="Or" title="#{bundle.AddLogicElement}"
                          disabled="#{diagramBean.isReadOnly()}"
                          actionListener="#{diagramBean.onAddLogicElement('Or')}" >
        </p:commandButton>
        <p:commandButton  value="If" title="#{bundle.AddCondition}"
                          disabled="#{diagramBean.isReadOnly()}"
                          actionListener="#{diagramBean.onAddConditionElement()}" >
            <p:ajax event="dialogReturn" listener="#{diagramBean.onElementClose}" />
        </p:commandButton>

        <p:commandButton  value="State" title="#{bundle.AddState}"
                          disabled="#{diagramBean.isReadOnly()}"
                          actionListener="#{diagramBean.onAddStateElement('success')}" >
            <p:ajax event="dialogReturn" listener="#{diagramBean.onElementClose}" />
        </p:commandButton>

        <p:commandButton  value="Timer" title="#{bundle.AddTimer}"
                          disabled="#{diagramBean.isReadOnly()}"
                          actionListener="#{diagramBean.onAddTimerElement()}" >
            <p:ajax event="dialogReturn" listener="#{diagramBean.onElementClose}" />
        </p:commandButton>

        <p:commandButton value="Message" title="#{bundle.AddMessageElement}"
                         disabled="#{diagramBean.isReadOnly()}"
                         actionListener="#{diagramBean.onAddMessageElement()}" >
            <p:ajax event="dialogReturn" listener="#{diagramBean.onElementClose}" />
        </p:commandButton>

        <p:commandButton value="Start" title="#{bundle.AddStart}"
                         disabled="#{diagramBean.isReadOnly()}"
                         actionListener="#{diagramBean.onAddStartElement()}" >
            <p:ajax event="dialogReturn" listener="#{diagramBean.onElementClose}" />
        </p:commandButton>
        <p:commandButton value="Enter" title="#{bundle.AddEnter}"
                         disabled="#{diagramBean.isReadOnly()}"
                         actionListener="#{diagramBean.onAddEnterElement()}" >
            <p:ajax event="dialogReturn" listener="#{diagramBean.onElementClose}" />
        </p:commandButton>
        <p:commandButton value="Exit" title="#{bundle.AddExit}"
                         disabled="#{diagramBean.isReadOnly()}"
                         actionListener="#{diagramBean.onAddExitElement()}" >
            <p:ajax event="dialogReturn" listener="#{diagramBean.onElementClose}" />
        </p:commandButton>

        <span class="ui-separator">
            <span class="ui-icon ui-icon-grip-dotted-vertical" />
        </span>

        <p:commandButton title="#{bundle.LoadFromTemlate}" icon="ui-icon-folder-open"
                         disabled="#{diagramBean.isReadOnly()}"                                         
                         onclick="PF('LoadFromTemplDLG').show();"
                         update="LoadFromTemplFRM">                           
        </p:commandButton>
        <p:commandButton title="#{bundle.SaveAsTemlate}" icon="ui-icon-disk"
                         disabled="#{diagramBean.isReadOnly()}"
                         update="SaveAsTemplFRM"
                         onclick="PF('SaveAsTemplDLG').show();">
        </p:commandButton>

        <p:commandButton title="Clear" icon="ui-icon-closethick"
                         disabled="#{diagramBean.isReadOnly()}"
                         actionListener="#{diagramBean.onClearModel()}"
                         update="diagramm">
            <p:confirm header="#{msg.ProcessDiagramWillBeCleared}" message="#{bundle.AreYouSure}" icon="ui-icon-alert"/>
        </p:commandButton>
        <span class="ui-separator">
            <span class="ui-icon ui-icon-grip-dotted-vertical" />
        </span>                          
        <p:commandButton type="button" title="Print" icon="ui-icon-print"/>
    </ui:define>

    <ui:define name="centerFormContent">  
        <p:diagram id="diagramm" value="#{diagramBean.model}" style="height:1600px" styleClass="ui-widget-content ui-grid-col-12" var="el" widgetVar="DiagrammWG" >
            <f:facet name="element" >
                <h:outputLabel value="#{diagramBean.getElementCaption(el)}" styleClass="diagramm-label" style="display:block;margin:0.5em;word-wrap:break-word;"/>
                <p:graphicImage value="#{diagramBean.getElementImage(el)}" styleClass="diagramm-image"/>
            </f:facet>
            <p:ajax event="connect"    disabled="#{diagramBean.isReadOnly()}" listener="#{diagramBean.onConnect}" />
            <p:ajax event="disconnect" disabled="#{diagramBean.isReadOnly()}" listener="#{diagramBean.onDisconnect}" />
            <p:ajax event="connectionChange" disabled="#{diagramBean.isReadOnly()}" listener="#{diagramBean.onConnectionChange}" />
        </p:diagram>

        <p:remoteCommand name="elementClicked" actionListener="#{diagramBean.onElementClicked}"/>
        <p:remoteCommand name="elementOpen" actionListener="#{diagramBean.onElementOpenClick()}"/>
        <p:remoteCommand name="elementCopy" actionListener="#{diagramBean.onElementCopy()}"/>
        <p:remoteCommand name="elementPaste" actionListener="#{diagramBean.onElementPaste()}"/>
        <p:remoteCommand name="elementDelete" actionListener="#{diagramBean.onElementDelete}"/>

        <p:commandButton style="display: none;" id="btnOpenElement" actionListener="#{diagramBean.onElementOpen()}">
            <p:ajax event="dialogReturn" listener="#{diagramBean.onElementClose}"/>
        </p:commandButton>
        <p:commandButton style="display: none;" id="btnOpenTask" actionListener="#{diagramBean.onOpenTask()}">
            <p:ajax event="dialogReturn" listener="#{diagramBean.onAfterTaskClose}"/>
        </p:commandButton>
    </ui:define>

    <ui:define name="dialogs">
        <ui:include src="/view/processes/templ/save-as-dlg.xhtml"/>
        <ui:include src="/view/processes/templ/load-from-templ-dlg.xhtml"/>
    </ui:define>

</ui:composition>