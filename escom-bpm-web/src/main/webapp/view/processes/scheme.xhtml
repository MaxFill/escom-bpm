<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core">                

    <ui:param name="_schemeBean" value="#{processCardBean.diagramBean}"/>
    
    <p:dialog header="#{_schemeBean.getFormHeader()}" resizable="true" modal="true" closable="true" maximizable="true" closeOnEscape="false" widgetVar="schemeDlg" height="450px" width="800px">
        <h:form id="schemeFRM" style="font-size: 100%;">            
            <p:panelGrid layout="grid" columns="1" rendered="#{_schemeBean.scheme != null}" columnClasses="ui-grid-col-12 col-padding" styleClass="ui-grid-col-12 without-spaces" >                        
                <p:toolbar id="explToolBar">
                    <f:facet name="left">
                        <p:commandButton  value="#{bundle.And}" title="#{bundle.AddLogicElement}"
                                          disabled="#{_schemeBean.isReadOnly()}"
                                          actionListener="#{_schemeBean.onAddLogicElement('And')}" >
                        </p:commandButton>
                        <p:commandButton  value="#{bundle.Or}" title="#{bundle.AddLogicElement}"
                                          disabled="#{_schemeBean.isReadOnly()}"
                                          actionListener="#{_schemeBean.onAddLogicElement('Or')}" >
                        </p:commandButton>

                        <p:commandButton icon="ico_condition-16" title="#{bundle.AddCondition}"
                                          disabled="#{_schemeBean.isReadOnly()}"
                                          actionListener="#{_schemeBean.onAddConditionElement()}" >
                            <p:ajax event="dialogReturn" listener="#{_schemeBean.onElementClose}" />
                        </p:commandButton>

                        <span class="ui-separator">
                            <span class="ui-icon ui-icon-grip-dotted-vertical" />
                        </span>

                        <p:commandButton icon="ico-task-16" title="#{bundle.AddTasks}"
                                         disabled="#{_schemeBean.isReadOnly()}"
                                         onstart="PF('statusDialog').show()"
                                         oncomplete="PF('statusDialog').hide();"
                                         actionListener="#{staffBean.onManySelectItem()}" >
                            <p:ajax event="dialogReturn" listener="#{_schemeBean.onStaffsSelected}" />
                        </p:commandButton>

                        <p:commandButton icon="ico_timer16" title="#{bundle.AddTimer}"
                                          disabled="#{_schemeBean.isReadOnly()}"
                                          actionListener="#{_schemeBean.onAddTimerElement()}" >
                            <p:ajax event="dialogReturn" listener="#{_schemeBean.onElementClose}" />
                        </p:commandButton>

                        <p:commandButton icon="ico_state-16" title="#{bundle.AddState}"
                                          disabled="#{_schemeBean.isReadOnly()}"
                                          actionListener="#{_schemeBean.onAddStateElement()}" >
                            <p:ajax event="dialogReturn" listener="#{_schemeBean.onElementClose}" />
                        </p:commandButton>

                        <p:commandButton icon="ico_message-16" title="#{bundle.AddMessageElement}"
                                         disabled="#{_schemeBean.isReadOnly()}"
                                         actionListener="#{_schemeBean.onAddMessageElement()}" >
                            <p:ajax event="dialogReturn" listener="#{_schemeBean.onElementClose}" />
                        </p:commandButton>

                        <p:commandButton icon="ico_procedure-16" title="#{bundle.AddProcedureElement}"
                                         disabled="#{_schemeBean.isReadOnly()}"
                                         actionListener="#{_schemeBean.onAddProcElement()}" >
                            <p:ajax event="dialogReturn" listener="#{_schemeBean.onElementClose}" />
                        </p:commandButton>

                        <p:commandButton icon="ico_process" title="#{bundle.AddSubProcess}"
                                         disabled="#{_schemeBean.isReadOnly()}"
                                         actionListener="#{_schemeBean.onAddSubProcessElement()}" >
                            <p:ajax event="dialogReturn" listener="#{_schemeBean.onElementClose}" />
                        </p:commandButton>

                        <span class="ui-separator">
                            <span class="ui-icon ui-icon-grip-dotted-vertical" />
                        </span>

                        <p:commandButton icon="ico_start-16" title="#{bundle.AddStart}"
                                         disabled="#{_schemeBean.isReadOnly()}"
                                         actionListener="#{_schemeBean.onAddStartElement()}" >
                            <p:ajax event="dialogReturn" listener="#{_schemeBean.onElementClose}" />
                        </p:commandButton>
                        <p:commandButton icon="ico_enter16" title="#{bundle.AddEnter}"
                                         disabled="#{_schemeBean.isReadOnly()}"
                                         actionListener="#{_schemeBean.onAddEnterElement()}" >
                            <p:ajax event="dialogReturn" listener="#{_schemeBean.onElementClose}" />
                        </p:commandButton>
                        <p:commandButton icon="ico_exit16" title="#{bundle.AddExit}"
                                         disabled="#{_schemeBean.isReadOnly()}"
                                         actionListener="#{_schemeBean.onAddExitElement()}" >
                            <p:ajax event="dialogReturn" listener="#{_schemeBean.onElementClose}" />
                        </p:commandButton>
                    </f:facet>
                    
                    <f:facet name="right">
                        <ui:insert name="specToolButtons"/>
                        <p:menuButton value="#{bundle.Actions}" icon="ico_service-16">
                            <ui:insert name="menuActions" />  
                            <p:separator />
                            <p:menuitem value="#{bundle.ManualBook}" icon="ui-icon-help" rendered="#{_isShowHelp}" 
                                        onstart="PF('statusDialog').show()"
                                        oncomplete="PF('statusDialog').hide();"
                                        actionListener="#{sessionBean.onViewHelp()}"/>                            
                        </p:menuButton>
                    </f:facet>
                </p:toolbar>  

                <p:messages id="messages" showDetail="false" closable="true" styleClass="ui-grid-col-12 without-spaces">
                    <p:autoUpdate />
                </p:messages>

                <ui:insert name="centerFormContent"/>

            </p:panelGrid>
        </h:form>
    </p:dialog>

    <h:outputScript library="contextMenu" name="contextMenu.js" />         
    <script type="text/javascript">
        function addContextMenu(componentId) {
            var menu = [{
                    name: '#{bundle.Paste}',
                    img: '/escom-bpm-web/resources/icon/paste.png',
                    disable: true,
                    fun: function () {
                        elementPaste();
                    }
                }, {
                    name: '#{bundle.Close}',
                    img: '/escom-bpm-web/resources/icon/cancel.png'
                }];

            var component = $(document.getElementById(componentId));
            component.contextMenu('menu', menu, {});
        }

        function addElementMenu(elementIds) {
            var menu = [{
                    name: '#{bundle.Properties}',
                    img: '/escom-bpm-web/resources/images/settings.png',
                    fun: function () {
                        elementOpen();
                    }
                }, 
                /* {
                    name: 'Copy',
                    img: '/escom-bpm-web/resources/icon/copy.png',
                    fun: function () {
                        elementCopy();
                    }
                },*/
                {
                    name: '#{bundle.Delete}',
                    img: '/escom-bpm-web/resources/images/delete.png',
                    fun: function () {
                        elementDelete();
                    }
                }];

            elementIds.forEach(function (elementId) {
                var component = $(document.getElementById(elementId));
                component.contextMenu('menu', menu, {triggerOn: 'contextmenu', displayAround: 'trigger', horAdjust: -component.width() + 20, verAdjust: +20});
            });
        }

        function sendElementClick(info) {
            //console.log("elementId="+info.target.id);                    
            var xPos = info.target.offsetLeft; // / parseFloat($("body").css("font-size"));
            var yPos = info.target.offsetTop; // / parseFloat($("body").css("font-size"));
            var elementId = info.target.id;
            if (elementId.indexOf('diagramm') == -1) {
                var parentElement = info.target.parentElement;
                elementId = $(parentElement).attr('id');
                //console.log("parent elementId="+ elementId);
                xPos = parentElement.offsetLeft; // / parseFloat($("body").css("font-size"));
                yPos = parentElement.offsetTop; // / parseFloat($("body").css("font-size"));
            }
            elementClicked([
                {name: 'elementId', value: elementId},
                {name: 'posX', value: xPos},
                {name: 'posY', value: yPos}
            ]);
        }

        $(document).on('click', '.ui-diagram > .ui-diagram-element',
                function (info) {
                    sendElementClick(info);
                });

        $(document).on('contextmenu', '.ui-diagram > .ui-diagram-element',
                function (info) {
                    sendElementClick(info);
                });

        function refreshContextMenu(componentId) {
            //console.log("refresh componentId="+componentId);
            var menu = [{
                    name: '#{bundle.Paste}',
                    img: '/escom-bpm-web/resources/images/paste.png',
                    disable: false,
                    fun: function () {
                        elementPaste();
                    }
                }, {
                    name: '#{bundle.Close}',
                    img: '/escom-bpm-web/resources/icon/cancel.png',
                }];

            var component = $(document.getElementById(componentId));
            component.contextMenu('update', menu, {});
        }
    </script>
    
</ui:composition>