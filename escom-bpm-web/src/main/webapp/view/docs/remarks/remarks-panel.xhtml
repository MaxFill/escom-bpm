<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core">                

    <p:accordionPanel id="accord" widgetVar="accordion" activeIndex="#{remarkCardBean.currentTab}" var="author" value="#{remarkCardBean.authors}" >
        <p:ajax event="tabChange" listener="#{remarkCardBean.onTabChange}"/>        
        <p:tab title="#{author.getShortFIO()}">
            <p:dataGrid id="dgMyRemarks" var="remark" value="#{remarkCardBean.getAuthorRemarks(author)}" columns="1" layout="grid"
                        paginator="true" emptyMessage="#{bundle.EmptyTable}"
                        paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
                        paginatorPosition="bottom"
                        rowsPerPageTemplate="5,10,15" rows="5"
                        styleClass="ui-grid-col-12 without-spaces">

                <p:panel menuTitle="#{bundle.Menu}" collapsed="#{remark.state.currentState.id == 13}" 
                         toggleTitle="#{''.concat(bundle.Collapse).concat('/').concat(bundle.Expand)}" 
                         toggleable="true" toggleSpeed="100" 
                         styleClass="ui-grid-col-12 without-spaces">
                    <f:facet name="header">
                        <h:graphicImage value="#{remark.state.currentState.icon}" title="#{stateBean.getBundleName(remark.state.currentState)}"
                                        rendered="#{!remarkCardBean.isCanCheckRemark()}"/>
                        <h:graphicImage value="#{remark.iconName}" title="#{remark.checked ? bundle.RemarkChecked : bundle.RemarkNotTakenAccount}"
                                        rendered="#{remarkCardBean.isCanCheckRemark()}"/>
                        <p:outputLabel value="#{''.concat(stateBean.getBundleName(remark.state.currentState))}" />
                    </f:facet>

                    <f:facet name="actions">
                        <p:commandLink type="button" title="#{bundle.RemarkChecked}" styleClass="ui-panel-titlebar-icon ui-corner-all ui-state-default"                                        
                                        rendered="#{remarkCardBean.isCanCheckRemark()}"
                                        actionListener="#{remarkCardBean.onRemarkCheck(remark)}" update="dgMyRemarks">   
                            <h:outputText styleClass="ui-icon ui-icon-check" />
                        </p:commandLink>
                        <p:commandLink type="button" title="#{bundle.Delete}" styleClass="ui-panel-titlebar-icon ui-corner-all ui-state-default"
                                        disabled="#{!remarkCardBean.isCanModifyRemark(remark)}" 
                                        actionListener="#{remarkCardBean.onDeleteRemark(remark)}" update="dgMyRemarks">
                                <p:confirm header="#{bundle.ConfirmAction}" message="#{bundle.ConfirmDelete}" icon="ui-icon-alert" />
                                <h:outputText styleClass="ui-icon ui-icon-trash" />
                        </p:commandLink> 
                        <p:commandLink type="button" title="#{bundle.Notify}" styleClass="ui-panel-titlebar-icon ui-corner-all ui-state-default"
                                        disabled="#{remark.author ne remarkCardBean.currentUser or empty(remark.author.email)}"                                      
                                        actionListener="#{remarkCardBean.onNotifyRemark(remark)}">
                            <h:outputText styleClass="ui-icon ui-icon-mail-closed" />
                        </p:commandLink>
                        <p:commandLink type="button" title="#{bundle.RemarkConfirmed}" styleClass="ui-panel-titlebar-icon ui-corner-all ui-state-default"
                                    rendered="#{!remarkCardBean.isCanCheckRemark() and remark.state.currentState.id == 12}"
                                    disabled="#{!remarkCardBean.isCanModifyRemark(remark)}"
                                    actionListener="#{remarkCardBean.onChangeStateRemark(remark, 13)}" update="dgMyRemarks">
                            <h:outputText styleClass="ui-icon ui-icon-close" />
                        </p:commandLink>
                        <p:commandLink type="button" title="#{bundle.RemarkIssued}" styleClass="ui-panel-titlebar-icon ui-corner-all ui-state-default" 
                                    disabled="#{!remarkCardBean.isCanModifyRemark(remark)}"
                                    rendered="#{!remarkCardBean.isCanCheckRemark() and remark.state.currentState.id == 13}"
                                    actionListener="#{remarkCardBean.onChangeStateRemark(remark, 12)}" update="dgMyRemarks">
                            <h:outputText styleClass="ui-icon ui-icon-notice" />
                        </p:commandLink>
                    </f:facet>

                    <p:panelGrid columns="1" columnClasses="ui-grid-col-12 col-padding" styleClass="ui-grid-col-12 without-spaces">
                        <p:inputTextarea value="#{remark.content}" 
                                         disabled="#{!remarkCardBean.isCanModifyRemark(remark)}"
                                         rows="3" autoResize="true" styleClass="ui-grid-col-12" maxlength="1000"/>
                    </p:panelGrid>
                </p:panel>
            </p:dataGrid>
            <p:contextMenu for="dgMyRemarks">
                <p:menuitem value="#{bundle.CreateRemark}" icon="ui-icon-plus" 
                            disabled="#{!remarkCardBean.isCanCreateRemark()}"
                            actionListener="#{remarkCardBean.onCreateRemark()}" update="dgMyRemarks">
                </p:menuitem>
            </p:contextMenu>
        </p:tab>
    </p:accordionPanel> 

</ui:composition>