<ui:composition  xmlns="http://www.w3.org/1999/xhtml"
                 xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                 xmlns:p="http://primefaces.org/ui"
                 xmlns:pe="http://primefaces.org/ui/extensions"
                 xmlns:f="http://xmlns.jcp.org/jsf/core"
                 xmlns:h="http://xmlns.jcp.org/jsf/html"
                 template="/view/templ/templ.xhtml">

    <ui:define name="title">
        #{docLockBean.attacheLock ? bundle.UnLock : bundle.SettingLock}
    </ui:define>

    <ui:param name="_frm" value="lockForm" />
    
    <ui:define name="body">

        <pe:layout fullPage="true" options="#{docLockBean.layoutOptions}" widgetVar="fpLayoutWidget">
            <p:ajax event="resize" listener="#{docLockBean.handleResize}"/> 
            <pe:layoutPane position="center" resizable="true">
                <h:form id="#{_frm}" style="font-size: 90%;"> 
                    <h:outputScript library="js" name="ITHitWebDAVClient.js" /> 

                    <script type="text/javascript">
                        function CopyToClipboard(text) {
                            window.prompt("#{bundle.CopyToClipboard}", text);
                        }

                        function EditDoc(sDocumentUrl, sFolderUrl) {
                            var oNs = ITHit.WebDAV.Client.DocManager;
                            oNs.DavProtocolEditDocument(sDocumentUrl, sFolderUrl, ProtocolInstallCallback);
                        }

                        function ProtocolInstallCallback(message) {
                            var installerFilePath = "http://www.ajaxbrowser.com/ITHitService/WebDAVAJAXLibrary/Plugins/" +
                                    ITHit.WebDAV.Client.DocManager.GetInstallFileName();

                            if (confirm("#{msg.RequiresProtocolInstallation}")) {
                                window.open(installerFilePath);
                            }
                        }
                    </script>

                    <p:hotkey bind="esc" id="hotskey"
                              immediate="true"                             
                              onstart="document.getElementById('#{_frm}:btnClose').click();"> 
                    </p:hotkey>
                    
                    <p:menubar styleClass="without-spaces">
                        <p:submenu label="#{bundle.Actions}" icon="ui-icon-gear" styleClass="submenu">
                            <p:menuitem value="#{bundle.SetLock}" title="#{bundle.SetLockAndEdit}"
                                        icon="ui-icon-locked"
                                        rendered="#{!docLockBean.attacheLock}"
                                        onclick="document.getElementById('#{_frm}:btnSetLock').click();"/>
                            <p:menuitem value="#{bundle.SetUnLock}" 
                                        icon="ui-icon-unlocked"
                                        rendered="#{docLockBean.attacheLock}"
                                        onclick="document.getElementById('#{_frm}:btnSetUnLock').click();"/> 
                            <p:separator/>
                            <p:menuitem icon="ui-icon-circle-close" value="#{bundle.Close}"
                                        onclick="document.getElementById('#{_frm}:btnClose').click();">  
                            </p:menuitem>
                        </p:submenu>
                        <f:facet name="options">
                            <p:commandButton value="#{bundle.RestartTimer}"  
                                             rendered="#{docLockBean.canShowRestartTimerBtn}"                                             
                                             actionListener="#{docLockBean.changeDatePlanLock()}"/>
                            <p:commandButton value="#{bundle.GetURL}" title="#{bundle.GetLinkForEdit}" 
                                             rendered="#{docLockBean.attacheLock and docLockBean.userIsEditor}"
                                             actionListener="#{docLockBean.showFileLink()}"/>
                            <p:commandButton id="btnSetLock" value="#{bundle.SetLock}" title="#{bundle.SetLockAndEdit}"
                                             rendered="#{!docLockBean.attacheLock}"
                                             update="#{_frm}"
                                             action="#{docLockBean.makeLock()}"/>                            
                            <p:commandButton id="btnClose" icon="ui-icon-circle-close" style="float:right;"
                                             title="#{bundle.Close}"
                                             immediate="true"
                                             action="#{docLockBean.onCloseCard()}"> 
                            </p:commandButton> 
                        </f:facet>
                    </p:menubar>
                    <p:panelGrid columns="1" columnClasses="ui-grid-col-12" styleClass="ui-grid-col-12 col-padding">
                        <p:messages id="messages" showDetail="true" closable="true" styleClass="ui-panelgrid-blank ui-grid-col-12 col-padding">
                            <p:autoUpdate />
                        </p:messages>
                        <p:panelGrid columns="3" columnClasses="ui-grid-col-2, ui-grid-col-4, ui-grid-col-6" styleClass="ui-grid-col-12">                             
                            <p:outputLabel value="#{bundle.LockPeriod}"/>
                            <p:calendar id="dateLock" value="#{docLockBean.lockDate}" title="#{bundle.DatePlanUnlock}"
                                        styleClass="ui-grid-col-12" 
                                        required="#{param['isRequired'] == 'true'}"
                                        navigator="true" showHour="true" mask="true"
                                        locale="#{sessionBean.locale}"
                                        mindate="#{docLockBean.minLockDate}" maxdate="#{docLockBean.maxLockDate}"                              
                                        requiredMessage="#{bundle.Field} [#{bundle.DatePlanUnlock}] #{bundle.MustBeFilled}">
                                <p:ajax event="dateSelect" listener="#{docLockBean.onChangeDateLock}" />
                            </p:calendar>
                            <h:panelGrid columns="2" rendered="#{docLockBean.attacheLock}">
                                <p:outputLabel value="#{bundle.SetUnLock}" />
                                <p:selectOneRadio value="#{docLockBean.modeUnLock}" layout="grid" columns="1">
                                    <f:selectItem itemLabel="#{bundle.CreateNewVersion}" itemValue="#{0}"/>
                                    <f:selectItem itemLabel="#{bundle.SaveWithOutCreateVersion}" itemValue="#{1}"/>
                                    <f:selectItem itemLabel="#{bundle.DoNotSaveChanges}" itemValue="#{2}"/>
                                </p:selectOneRadio>
                                <p:commandButton id="btnSetUnLock" value="#{bundle.Make}" title="#{bundle.SetUnLock}" 
                                            update="#{_frm}"
                                            action="#{docLockBean.makeUnLock()}">
                                    <f:param name="isRequired" value="true"/>
                                </p:commandButton>
                            </h:panelGrid>
                        </p:panelGrid> 
                        <p:separator />
                        <p:panelGrid columns="2" columnClasses="ui-grid-col-3, ui-grid-col-9" styleClass="ui-grid-col-12">
                            <p:graphicImage name="/images/info.jpg"/> 
                            <h:outputText value="#{msg.SettingLockDocInfo}" /> 
                            <p:spacer />
                            <h:panelGroup>
                                <p:separator />
                                <h:outputText value="#{msg.SetLockDocAndOpenFile}" rendered="#{!docLockBean.attacheLock}"/>
                                <h:outputText value="#{msg.SetUnLockDoc}" rendered="#{docLockBean.attacheLock}"/>
                            </h:panelGroup>
                        </p:panelGrid>
                    </p:panelGrid>
                </h:form>
            </pe:layoutPane>
        </pe:layout>
    </ui:define>

</ui:composition>

